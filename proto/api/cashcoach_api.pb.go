// Code generated by protoc-gen-go. DO NOT EDIT.
// source: cashcoach_api.proto

/*
Package cashcoach_api is a generated protocol buffer package.

It is generated from these files:
	cashcoach_api.proto

It has these top-level messages:
	GetHealthRequest
	GetHealthResponse
*/
package cashcoach_api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type HealthStatus int32

const (
	HealthStatus_UNHEALTHY HealthStatus = 0
	HealthStatus_OK        HealthStatus = 1
)

var HealthStatus_name = map[int32]string{
	0: "UNHEALTHY",
	1: "OK",
}
var HealthStatus_value = map[string]int32{
	"UNHEALTHY": 0,
	"OK":        1,
}

func (x HealthStatus) String() string {
	return proto.EnumName(HealthStatus_name, int32(x))
}
func (HealthStatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetHealthRequest struct {
}

func (m *GetHealthRequest) Reset()                    { *m = GetHealthRequest{} }
func (m *GetHealthRequest) String() string            { return proto.CompactTextString(m) }
func (*GetHealthRequest) ProtoMessage()               {}
func (*GetHealthRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type GetHealthResponse struct {
	Status HealthStatus `protobuf:"varint,1,opt,name=status,enum=cashcoach_api.HealthStatus" json:"status,omitempty"`
}

func (m *GetHealthResponse) Reset()                    { *m = GetHealthResponse{} }
func (m *GetHealthResponse) String() string            { return proto.CompactTextString(m) }
func (*GetHealthResponse) ProtoMessage()               {}
func (*GetHealthResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *GetHealthResponse) GetStatus() HealthStatus {
	if m != nil {
		return m.Status
	}
	return HealthStatus_UNHEALTHY
}

func init() {
	proto.RegisterType((*GetHealthRequest)(nil), "cashcoach_api.GetHealthRequest")
	proto.RegisterType((*GetHealthResponse)(nil), "cashcoach_api.GetHealthResponse")
	proto.RegisterEnum("cashcoach_api.HealthStatus", HealthStatus_name, HealthStatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for CashCoachApi service

type CashCoachApiClient interface {
	GetHealth(ctx context.Context, in *GetHealthRequest, opts ...grpc.CallOption) (*GetHealthResponse, error)
}

type cashCoachApiClient struct {
	cc *grpc.ClientConn
}

func NewCashCoachApiClient(cc *grpc.ClientConn) CashCoachApiClient {
	return &cashCoachApiClient{cc}
}

func (c *cashCoachApiClient) GetHealth(ctx context.Context, in *GetHealthRequest, opts ...grpc.CallOption) (*GetHealthResponse, error) {
	out := new(GetHealthResponse)
	err := grpc.Invoke(ctx, "/cashcoach_api.CashCoachApi/GetHealth", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for CashCoachApi service

type CashCoachApiServer interface {
	GetHealth(context.Context, *GetHealthRequest) (*GetHealthResponse, error)
}

func RegisterCashCoachApiServer(s *grpc.Server, srv CashCoachApiServer) {
	s.RegisterService(&_CashCoachApi_serviceDesc, srv)
}

func _CashCoachApi_GetHealth_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetHealthRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CashCoachApiServer).GetHealth(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/cashcoach_api.CashCoachApi/GetHealth",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CashCoachApiServer).GetHealth(ctx, req.(*GetHealthRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CashCoachApi_serviceDesc = grpc.ServiceDesc{
	ServiceName: "cashcoach_api.CashCoachApi",
	HandlerType: (*CashCoachApiServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetHealth",
			Handler:    _CashCoachApi_GetHealth_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "cashcoach_api.proto",
}

func init() { proto.RegisterFile("cashcoach_api.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 180 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x4e, 0x4e, 0x2c, 0xce,
	0x48, 0xce, 0x4f, 0x4c, 0xce, 0x88, 0x4f, 0x2c, 0xc8, 0xd4, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17,
	0xe2, 0x45, 0x11, 0x54, 0x12, 0xe2, 0x12, 0x70, 0x4f, 0x2d, 0xf1, 0x48, 0x4d, 0xcc, 0x29, 0xc9,
	0x08, 0x4a, 0x2d, 0x2c, 0x4d, 0x2d, 0x2e, 0x51, 0xf2, 0xe0, 0x12, 0x44, 0x12, 0x2b, 0x2e, 0xc8,
	0xcf, 0x2b, 0x4e, 0x15, 0x32, 0xe6, 0x62, 0x2b, 0x2e, 0x49, 0x2c, 0x29, 0x2d, 0x96, 0x60, 0x54,
	0x60, 0xd4, 0xe0, 0x33, 0x92, 0xd6, 0x43, 0x35, 0x1d, 0xa2, 0x3c, 0x18, 0xac, 0x24, 0x08, 0xaa,
	0x54, 0x4b, 0x95, 0x8b, 0x07, 0x59, 0x5c, 0x88, 0x97, 0x8b, 0x33, 0xd4, 0xcf, 0xc3, 0xd5, 0xd1,
	0x27, 0xc4, 0x23, 0x52, 0x80, 0x41, 0x88, 0x8d, 0x8b, 0xc9, 0xdf, 0x5b, 0x80, 0xd1, 0x28, 0x81,
	0x8b, 0xc7, 0x39, 0xb1, 0x38, 0xc3, 0x19, 0x64, 0x98, 0x63, 0x41, 0xa6, 0x50, 0x00, 0x17, 0x27,
	0xdc, 0x01, 0x42, 0xf2, 0x68, 0x16, 0xa1, 0x3b, 0x57, 0x4a, 0x01, 0xb7, 0x02, 0x88, 0xdb, 0x95,
	0x18, 0x92, 0xd8, 0xc0, 0x9e, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff, 0x78, 0x98, 0x54, 0xb0,
	0x13, 0x01, 0x00, 0x00,
}
